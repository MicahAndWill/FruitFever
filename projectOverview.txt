

Our Coding philosophy ( http://legacy.python.org/dev/peps/pep-0020/ ) : 

	Beautiful is better than ugly.
    Explicit is better than implicit.
    Simple is better than complex.
    Complex is better than complicated.
    Flat is better than nested.
    Sparse is better than dense.
    Readability counts.
    Special cases aren't special enough to break the rules.
    Although practicality beats purity.
    Errors should never pass silently.
    Unless explicitly silenced.
    In the face of ambiguity, refuse the temptation to guess.
    There should be one-- and preferably only one --obvious way to do it.
    Although that way may not be obvious at first unless you're Dutch.
    Now is better than never.
    Although never is often better than *right* now.
    If the implementation is hard to explain, it's a bad idea.
    If the implementation is easy to explain, it may be a good idea.
    Namespaces are one honking great idea -- let's do more of those!


- Project Dev Environment
	- Create A New GitHub shared GitHub account?

- Project Roles
	
	(Project Roles are in order of Doing)

	Micah:
		- Resource Management
		- Menu/Titles/Text
		- Level Selection Interface
		- AI & AI physics
		- Music
	
	Will:
		- Sprite Design
		- World/Sprite Layout 
			- Block interaction and infrastructure 
		- Main Character Implementation
			- Movement
			- Collision Detection
			- Actions
		- Sound Effects

	Both:
		- Overall game physics (This cannot be done alone)

- Project End Goal (What do we seek to accomplish):
		- We should have a finished, functional game (before school starts).
		- It should be completely our work, so that we have we the option to
		  sell and distribute it if we so choose.
		- Fun and playable, lots of content. Easy to add stuff.
		- Good for our "portfolio"
		- no hardcoding 

- Radical Game Design Idea:
	- Swirls = Portals
	- Fruit Craving/creating Smoothies  

- Documentation File?
- Screen Width/Height (700, 500)


